#!/usr/bin/ruby

$modules = [:core,
            :ling,
            :dataset_debug,
            :dataset_openweb,
            :model,
            ]

def usage
  puts "Usage: ./download-dependencies <#{$modules.join('|')}>"
end

if ARGV.size == 0
  usage
  exit 1
end

def run(command)
  puts "RUNNING: #{command}"
  if not system(command)
    puts "FAILED: #{command}"
    exit 1
  end
end

BASE_URL = 'http://nlp.stanford.edu/software/sempre/web-entity-extractor-ACL2014/'
def download(release, path, baseUrl=BASE_URL)
  url = baseUrl + '/release-' + release.to_s
  isDirectory = path.end_with?('/')
  path = path.sub(/\/*$/, '')
  if release != :code and !path.end_with?('.gz', '.tgz', '.jar')
    path += '.tar' if isDirectory
    path += '.bz2'
  end
  run("mkdir -p #{File.dirname(path)}")
  run("wget -c '#{url}/#{path}' -O #{path}")
  if release != :code and path.end_with?('.bz2')
    if isDirectory
      run("cd #{File.dirname(path)} && tar xjf #{File.basename(path)}")
    else
      run("bzip2 -fd #{path}")
    end
  end
end

def downloadFromFileList(release)
  files = []
  File.foreach(File.join('release', "#{release.to_s}.files")) { |line|
    file = line.sub(/#.*$/, '').sub(/^\s*/, '').sub(/\s*$/, '')
    next if file.length == 0
    files << file
  }
  files.each { |path|
    download(release, path)
  }
end

def main(which)
  if not $modules.include?(which)
    usage
    exit 1
  end
  downloadFromFileList(which)
end

ARGV.each { |mod|
  mod = mod.to_sym
  main(mod)
}
